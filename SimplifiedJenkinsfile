pipeline {
    agent any
    parameters {
        string(name: 'GIT_HTTPS_PATH', defaultValue: 'https://github.com/tavisca-tgoyal/WebAppDemo.git')
        string(name: 'TEST_PROJECT_PATH', defaultValue: 'WebAppDemo.Tests/WebAppDemo.Tests.csproj')
        string(name: 'API_SOLUTION', defaultValue: 'WebAppDemo.sln')
        string(name: 'PROJECT_NAME', defaultValue: 'WebAppDemo')
	string(name: 'PORT_NO', defaultValue: '5064')
	
	
        
    }
    stages {
        stage('Build'){
            steps{
                bat'''
                    dotnet restore $ENV:WORKSPACE\\$($env:API_SOLUTION) --source https://api.nuget.org/v3/index.json
                    dotnet build $ENV:WORKSPACE\\$($env:API_SOLUTION) -p:Configration=release -v:q
                    dotnet publish $ENV:WORKSPACE\\$($env:API_SOLUTION) -c Release -o ../publish
                    docker build --tag=jenpipe --build-arg project_name=%PROJECT_NAME%.dll .
                '''
            }
        }
        
        stage('Test') {
            steps {
              powershell'''
              dotnet test $ENV:WORKSPACE\\$($env:TEST_PROJECT_PATH)
              '''
            }
        }
        
        
        stage('Deploy') {
            steps {
                bat '''			
		docker run -p %PORT_NO%:80 pipe		
							
				'''
            }
    	}
	}
}
