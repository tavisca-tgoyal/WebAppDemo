pipeline {
    agent any
    parameters {
		string(name: 'GIT_TEST_PATH', defaultValue: 'WebAppDemo.Tests/WebAppDemo.Tests.csproj')
		string(name: 'SOLUTION_FILE_PATH', defaultValue: 'WebAppDemo.sln')
		string(name: 'PROJECT_NAME', defaultValue: 'WebAppDemo')
		string(name: 'PORT_NO', defaultValue: '4447')
		string(name: 'DOCKER_USERNAME', defaultValue: '')
		string(name: 'DOCKER_PASSWORD',defaultValue:'')
		string(name: 'DOCKER_REPO_NAME',defaultValue:'')
		string(name: 'IMAGE_VERSION', defaultValue:'latest')
  }
 
    stages {
        stage('Build') {
            steps {
                bat '''
				dotnet build %SOLUTION_FILE_PATH% -p:Configuration=release -v:q	
				dotnet test %TEST_FILE_PATH%
				dotnet publish %SOLUTION_PATH% -c Release -o ../publish
				
				docker build --tag=%DOCKER_REPO_NAME%:%IMAGE_VERSION% --build-arg project_name=%PROJECT_NAME%.dll .
				docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%
				docker push %DOCKER_REPO_NAME%:%IMAGE_VERSION%
				'''
			}
			}
				
		stage('Deploy') {
            steps {
                bat '''
				docker pull %DOCKER_REPO_NAME%:%IMAGE_VERSION%
				docker run -p %PORT_NO%:88 %DOCKER_REPO_NAME%:%IMAGE_VERSION%
				
				'''
            }
        }
    }
}
